{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAASC,SAASC,cAAc,SAEhCC,EAAa,CACjBC,MAAO,KACPC,KAAM,KACNC,OAAQ,MAqCV,SAASC,EAAcC,EAAUJ,GAC7B,MAAMK,EAAgBC,KAAKC,SAAW,GAStC,OARgB,IAAIC,SAAQ,CAACC,EAAKC,KAC5BL,EACJI,EAAI,C,SAACL,E,MAAUJ,IAEfU,EAAI,C,SAACN,E,MAAUJ,GAAO,G,CAxC5BJ,EAAOe,iBAAiB,UAOxB,SAAsBC,GACpBA,EAAIC,iBAEJ,MAAMC,EAAef,EAAWC,MAChC,IAAIe,EAAkBhB,EAAWE,KACjC,MAAMe,EAAajB,EAAWG,OAG9B,IAAK,IAAIe,EAAI,EAAGA,EAAID,EAAYC,GAAG,EAAG,CACpC,IAAIC,EAAWD,EAAI,EACfE,EAAQL,EAAeC,EAAkBE,EAIjDG,YAAW,KACXjB,EAAce,EAAUC,GACvBE,MAAK,EAACjB,SAAEA,EAAQJ,MAAEA,MACTN,EAAA4B,OAAOC,QAAQ,uBAAqBnB,QAAiBJ,MAAU,IAExEwB,OAAM,EAACpB,SAAEA,EAAQJ,MAAEA,MACVN,EAAA4B,OAAOG,QAAQ,sBAAoBrB,QAAeJ,MAAU,GAC5D,GACFc,EAAeC,EAAkBE,E,KA5BzCrB,EAAOe,iBAAiB,SAExB,SAAuBC,GACrBb,EAAWa,EAAIc,OAAOC,MAAQC,OAAOhB,EAAIc,OAAOG,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formEl = document.querySelector('.form');\n\nconst formValues = {\n  delay: null,\n  step: null,\n  amount: null,\n}\n\nformEl.addEventListener('submit', startMassage);\nformEl.addEventListener('input', addFormValues);\n\nfunction addFormValues(evt) {\n  formValues[evt.target.name] = Number(evt.target.value);\n}\n\nfunction startMassage(evt) {\n  evt.preventDefault();\n\n  const firstTimeout = formValues.delay;\n  let intervalTimeout = formValues.step;\n  const amountStep = formValues.amount;\n  \n\n  for (let i = 0; i < amountStep; i+=1) {\n    let position = i + 1;\n    let delay = firstTimeout + intervalTimeout * i;\n  \n   \n    \nsetTimeout(() => {\ncreatePromise(position, delay)\n.then(({ position, delay }) => {\n          Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n.catch(({ position, delay }) => {\n          Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n     }, firstTimeout + intervalTimeout * i);\n  }\n}\n  \n\nfunction createPromise(position, delay) { \n    const shouldResolve = Math.random() > 0.3;\n    const promise = new Promise((res, rej) => {\n      if (shouldResolve) {\n      res({position, delay});\n    } else {\n      rej({position, delay});\n    }\n  });\n    \n    return promise;\n  }"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$formEl","document","querySelector","$47d4ff9957288465$var$formValues","delay","step","amount","$47d4ff9957288465$var$createPromise","position","shouldResolve","Math","random","Promise","res","rej","addEventListener","evt","preventDefault","firstTimeout","intervalTimeout","amountStep","i","position1","delay1","setTimeout","then","Notify","success","catch","failure","target","name","Number","value"],"version":3,"file":"03-promises.49bc55ef.js.map"}